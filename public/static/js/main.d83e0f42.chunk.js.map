{"version":3,"sources":["nav.js","pages/Home.js","teaching/first.js","teaching/second.js","pages/teaching.js","pages/example.js","pages/about.js","App.js","serviceWorker.js","index.js"],"names":["Nav","style","textDecoration","color","to","React","Component","Home","className","href","First","width","height","src","frameborder","allow","allowfullscreen","Second","Teaching","type","id","htmlFor","TeachList","TeachArticle","exact","path","component","Example","About","App","history","createBrowserHistory","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d83e0f42.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style/nav.scss';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Nav extends React.Component{\r\n    render(){\r\n        return(\r\n            <nav>\r\n                <ul>\r\n                    <li><Link style={{textDecoration:'none',color:'white'}} to='/'>Jun's Blog</Link></li>\r\n                    <li><Link style={{textDecoration:'none',color:'white'}} to='/teaching'>教學文章</Link></li>\r\n                    <li><Link style={{textDecoration:'none',color:'white'}} to='/example'>範例</Link></li>\r\n                    <li><Link style={{textDecoration:'none',color:'white'}} to='/about'>關於我</Link></li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport '../style/home.scss';\r\n\r\nclass Home extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className='home'>\r\n                <div className='article'>\r\n                <h2>ReactJS環境建置-第一個React App</h2>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本文將提到如何建置人生中第一個ReactJS專案，首先我們須先至nodejs的官網安裝nodejs\r\n                        ，利用npm來管理與安裝我們ReactJS專案所需的相關資源，安裝好後我們可以開啟cmd輸入node -v\r\n                        與npm -v這兩個指令查看版本並檢查是否有安裝成功\r\n                </p>\r\n                <a href='/#/teaching'>查看全文</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport '../style/teach_content.scss';\r\n\r\nclass First extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className='article'>\r\n                <div className='title'>\r\n                    <h2>ReactJS環境建置-第一個React App</h2>\r\n                </div>\r\n                <div className='content'>\r\n                    <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本文將提到如何建置人生中第一個ReactJS專案，首先我們須先至nodejs的官網安裝nodejs\r\n                        ，利用npm來管理與安裝我們ReactJS專案所需的相關資源，安裝好後我們可以開啟cmd輸入node -v\r\n                        與npm -v這兩個指令查看版本並檢查是否有安裝成功\r\n                    </p>\r\n                    <div className='code'>\r\n                        <code>> node -v</code><br/>\r\n                        <code>> npm -v</code>\r\n                    </div>\r\n                    <p>安裝成功後我們就可以開始建置我們的第一個ReactJS專案了!!</p>\r\n                    <p>先於cmd內輸入npm install create-react-app進行安裝</p>\r\n                    <p>接著輸入npx create-react-app ['你的專案名稱']</p>\r\n                    <div className='code'>\r\n                        <code>> npm install create-react-app</code><br/>\r\n                        <code>> npx create-react-app myapp</code>\r\n                    </div>\r\n                    <p>接著就等待安裝完成</p>\r\n                    <p>安裝完成後輸入npm start</p>\r\n                    <div className='code'>\r\n                        <code>> npm start</code>\r\n                    </div>\r\n                    <p>第一個React專案就完成了!!</p>\r\n                    <p>輸入localhost:3000</p>\r\n                    <iframe width=\"700\" height=\"394\" src=\"https://www.youtube.com/embed/hE1vB7tZ9WQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default First;","import React from 'react';\r\n\r\nclass Second extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                two\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Second;","import React from 'react';\r\nimport '../style/teaching.scss';\r\nimport { Switch, Route ,Link} from 'react-router-dom';\r\nimport First from '../teaching/first';\r\nimport Second from '../teaching/second';\r\n\r\nclass Teaching extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='teaching'>\r\n                <input type='checkbox' id='c'></input>\r\n                <label htmlFor='c'></label>\r\n                <TeachList />\r\n                <TeachArticle />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TeachList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='teach_list'>\r\n                <ul>\r\n                    <li>React JS</li>\r\n                    <ul className='detail'>\r\n                        <li><Link style={{textDecoration:'none',color:'purple'}} to='/teaching'>ReactJS環境建置-第一個React App</Link></li>\r\n                    </ul>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TeachArticle extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='teach_article'>\r\n            <Switch>\r\n                <Route exact path='/teaching/' component={First}/>\r\n                <Route  path='/teaching/2' component={Second}/>\r\n            </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Teaching;","import React from 'react';\r\n\r\nclass Example extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className='example'>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Example;","import React from 'react';\r\nimport '../style/about.scss';\r\n\r\nclass About extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className='about'>\r\n                <div className='me'>\r\n                    <div className='pic'></div>\r\n                    <div className='info'>\r\n                        <h3>Jun</h3>\r\n                        <h5>1999/04/24</h5>\r\n                        <h5>目前就讀於某南部科大</h5>\r\n                        <h5>興趣:網頁程式設計,App</h5>\r\n                        <h5>目標:能在畢業前有就業能力，可以以ReactJS完成大部分網頁需求\r\n                            ，能夠自己接案完成一個case，之後繼續讀研究所</h5>\r\n                    </div>\r\n                </div>\r\n                <div className='skill'>\r\n                    <div className='skill_title'>\r\n                        <h3>學習技能</h3>\r\n                    </div>\r\n                    <div className='main'>\r\n                        <ul>\r\n                            <li>ReactJS</li>\r\n                            <li>React Native</li>\r\n                            <li>SCSS</li>\r\n                            <li>Git</li>\r\n                            <li>RWD</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className='contact'>\r\n                    <div className='contact_title'>\r\n                        <h3>聯絡我</h3>\r\n                    <h4>edcwsxqaz12337@gmail.com</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\nimport './style/app.scss';\nimport Nav from './nav';\nimport {HashRouter,Switch,Route} from 'react-router-dom'; \nimport Home from './pages/Home';\nimport Teaching from './pages/teaching';\nimport Example from './pages/example';\nimport About from './pages/about';\nimport {createBrowserHistory} from 'history';\n\nclass App extends React.Component{\n  render(){\n    return(\n      <div className='app'>\n        <HashRouter history={createBrowserHistory()}>\n        <Nav/>\n            <Switch>\n              <Route exact path='/' component={Home}/>\n              <Route  path='/teaching' component={Teaching}/>\n              <Route  path='/example' component={Example}/>\n              <Route  path='/about' component={About}/>\n            </Switch>\n        </HashRouter>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}